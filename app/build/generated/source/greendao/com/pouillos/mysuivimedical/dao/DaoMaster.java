package com.pouillos.mysuivimedical.dao;

import android.content.Context;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteDatabase.CursorFactory;
import android.util.Log;

import org.greenrobot.greendao.AbstractDaoMaster;
import org.greenrobot.greendao.database.StandardDatabase;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseOpenHelper;
import org.greenrobot.greendao.identityscope.IdentityScopeType;


// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/**
 * Master of DAO (schema version 3): knows all DAOs.
 */
public class DaoMaster extends AbstractDaoMaster {
    public static final int SCHEMA_VERSION = 3;

    /** Creates underlying database table using DAOs. */
    public static void createAllTables(Database db, boolean ifNotExists) {
        AnalyseDao.createTable(db, ifNotExists);
        AssociationContactLightEtablissementLightDao.createTable(db, ifNotExists);
        AssociationFormeDoseDao.createTable(db, ifNotExists);
        ContactDao.createTable(db, ifNotExists);
        ContactLightDao.createTable(db, ifNotExists);
        DepartementDao.createTable(db, ifNotExists);
        DoseDao.createTable(db, ifNotExists);
        EtablissementDao.createTable(db, ifNotExists);
        EtablissementLightDao.createTable(db, ifNotExists);
        ExamenDao.createTable(db, ifNotExists);
        FormePharmaceutiqueDao.createTable(db, ifNotExists);
        MedicamentDao.createTable(db, ifNotExists);
        MedicamentLightDao.createTable(db, ifNotExists);
        PhotoDao.createTable(db, ifNotExists);
        PrescriptionDao.createTable(db, ifNotExists);
        PriseDao.createTable(db, ifNotExists);
        ProfessionDao.createTable(db, ifNotExists);
        ProfilDao.createTable(db, ifNotExists);
        RegionDao.createTable(db, ifNotExists);
        SavoirFaireDao.createTable(db, ifNotExists);
        TypeEtablissementDao.createTable(db, ifNotExists);
        RdvAnalyseDao.createTable(db, ifNotExists);
        RdvContactDao.createTable(db, ifNotExists);
        RdvExamenDao.createTable(db, ifNotExists);
    }

    /** Drops underlying database table using DAOs. */
    public static void dropAllTables(Database db, boolean ifExists) {
        AnalyseDao.dropTable(db, ifExists);
        AssociationContactLightEtablissementLightDao.dropTable(db, ifExists);
        AssociationFormeDoseDao.dropTable(db, ifExists);
        ContactDao.dropTable(db, ifExists);
        ContactLightDao.dropTable(db, ifExists);
        DepartementDao.dropTable(db, ifExists);
        DoseDao.dropTable(db, ifExists);
        EtablissementDao.dropTable(db, ifExists);
        EtablissementLightDao.dropTable(db, ifExists);
        ExamenDao.dropTable(db, ifExists);
        FormePharmaceutiqueDao.dropTable(db, ifExists);
        MedicamentDao.dropTable(db, ifExists);
        MedicamentLightDao.dropTable(db, ifExists);
        PhotoDao.dropTable(db, ifExists);
        PrescriptionDao.dropTable(db, ifExists);
        PriseDao.dropTable(db, ifExists);
        ProfessionDao.dropTable(db, ifExists);
        ProfilDao.dropTable(db, ifExists);
        RegionDao.dropTable(db, ifExists);
        SavoirFaireDao.dropTable(db, ifExists);
        TypeEtablissementDao.dropTable(db, ifExists);
        RdvAnalyseDao.dropTable(db, ifExists);
        RdvContactDao.dropTable(db, ifExists);
        RdvExamenDao.dropTable(db, ifExists);
    }

    /**
     * WARNING: Drops all table on Upgrade! Use only during development.
     * Convenience method using a {@link DevOpenHelper}.
     */
    public static DaoSession newDevSession(Context context, String name) {
        Database db = new DevOpenHelper(context, name).getWritableDb();
        DaoMaster daoMaster = new DaoMaster(db);
        return daoMaster.newSession();
    }

    public DaoMaster(SQLiteDatabase db) {
        this(new StandardDatabase(db));
    }

    public DaoMaster(Database db) {
        super(db, SCHEMA_VERSION);
        registerDaoClass(AnalyseDao.class);
        registerDaoClass(AssociationContactLightEtablissementLightDao.class);
        registerDaoClass(AssociationFormeDoseDao.class);
        registerDaoClass(ContactDao.class);
        registerDaoClass(ContactLightDao.class);
        registerDaoClass(DepartementDao.class);
        registerDaoClass(DoseDao.class);
        registerDaoClass(EtablissementDao.class);
        registerDaoClass(EtablissementLightDao.class);
        registerDaoClass(ExamenDao.class);
        registerDaoClass(FormePharmaceutiqueDao.class);
        registerDaoClass(MedicamentDao.class);
        registerDaoClass(MedicamentLightDao.class);
        registerDaoClass(PhotoDao.class);
        registerDaoClass(PrescriptionDao.class);
        registerDaoClass(PriseDao.class);
        registerDaoClass(ProfessionDao.class);
        registerDaoClass(ProfilDao.class);
        registerDaoClass(RegionDao.class);
        registerDaoClass(SavoirFaireDao.class);
        registerDaoClass(TypeEtablissementDao.class);
        registerDaoClass(RdvAnalyseDao.class);
        registerDaoClass(RdvContactDao.class);
        registerDaoClass(RdvExamenDao.class);
    }

    public DaoSession newSession() {
        return new DaoSession(db, IdentityScopeType.Session, daoConfigMap);
    }

    public DaoSession newSession(IdentityScopeType type) {
        return new DaoSession(db, type, daoConfigMap);
    }

    /**
     * Calls {@link #createAllTables(Database, boolean)} in {@link #onCreate(Database)} -
     */
    public static abstract class OpenHelper extends DatabaseOpenHelper {
        public OpenHelper(Context context, String name) {
            super(context, name, SCHEMA_VERSION);
        }

        public OpenHelper(Context context, String name, CursorFactory factory) {
            super(context, name, factory, SCHEMA_VERSION);
        }

        @Override
        public void onCreate(Database db) {
            Log.i("greenDAO", "Creating tables for schema version " + SCHEMA_VERSION);
            createAllTables(db, false);
        }
    }

    /** WARNING: Drops all table on Upgrade! Use only during development. */
    public static class DevOpenHelper extends OpenHelper {
        public DevOpenHelper(Context context, String name) {
            super(context, name);
        }

        public DevOpenHelper(Context context, String name, CursorFactory factory) {
            super(context, name, factory);
        }

        @Override
        public void onUpgrade(Database db, int oldVersion, int newVersion) {
            Log.i("greenDAO", "Upgrading schema from version " + oldVersion + " to " + newVersion + " by dropping all tables");
            dropAllTables(db, true);
            onCreate(db);
        }
    }

}
